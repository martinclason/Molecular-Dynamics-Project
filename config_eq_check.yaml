---
#-----------Simulation------------#
run_MD: True
make_traj: True
atomic_number: 18
epsilon: 0.010323 # eV
sigma: 3.40 # Å
cutoff: 6.625 # Å
a : 5.256E-10 # Lattice constant
# Insert None for the unused lattice constants (e.g. [3.569,None,None,None,None,None] for SC/FCC/BCC lattice) 
latticeconstants : [3.6147,None,None,None,None,None] #[a, b, c, alpha, beta, gamma]
#bravaislattice currently only supports "SC", "FCC", "BCC" 
bravaislattice : #(conventional unit cell)
directions : [[1,0,0], [0,1,0], [0,0,1]] #(use Miller-Bravais for hex-structure), hex currently not supported
#Customizable primitive unit cell, leave bravaislattice empty if cell is used.
cell: [[0, 0.5, 0.5], [0.5, 0, 0.5], [0.5, 0.5, 0]] #(primitive unit cell vectors)
positions : [[0,0,0]] #Set position of each atom in the molecule
symbol : "Cu" 
pbc : True #periodic boundary conditions
size : [5,5,5]
temperature_K : 600
# Leave potential empty if running ASE, will resort to using EMT as potential.
potential: "openKIM"
# simulation time step [fs]
dt: 5
# The minimum number of itterations to run before the simulation starts checking if equilibrium
# has been reached. It's good to give some initial behavior in the simulated system time to 
# settle.
initIterations: 2000
eqCheckInterval: 10 # How many saves between each equilibrium check.
# How low the variance of energy/temperature needs to be in order to be con-
# sidered equilibrium.
tolerance: 1
# How many timesteps the simulation should run at max when looking for equilibrium
checkLimit: 1000
# Number of itterations after equilibrium has been determined, these will be the timesteps
# in the main output data
iterations: 10000 
output:
  - temperature
  - volume
# Number of timesteps between each save
interval: 100
openKIMid: "Sim_ASAP_EMT_Rasmussen_AgAuCu__SM_847706399649_000"


#-----------Analyse------------#
run_density: True
density_time: 1 #If wanted to specify what timestep the density is to be calculated. Empty = first timestep

run_MSD: True
MSD_time: #If wanted to specify what timestep the mean square displacement is to be calculated. Empty = first timestep

run_self_diffusion_coefficient: True
self_diffusion_coefficient_time: #If wanted to specify what timestep the self diffusion coefficient is to be calculated. Empty = first timestep

run_pressure: True


#-----------Visualize------------#
visualize:
  - temperature
run_density_plot: False
run_MSD_plot: False
